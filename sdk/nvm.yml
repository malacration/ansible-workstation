- hosts: localhost
  tasks:
  - name: Download nvm installer
    get_url: 
      url: https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh
      dest: /tmp/nvm-installer.sh
      mode: 0755
  - name: Execute the nvm-installer.sh
    shell: /tmp/nvm-installer.sh
  - name: Adiciona nvm no zshrc
    blockinfile:
      path: "{{ ansible_env.HOME }}/.zshrc"
      block: |
        # Inicia nvm
        export NVM_DIR="$HOME/.nvm"
        [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
        [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
      marker: "# {mark} ANSIBLE MANAGED BLOCK for nvm no zshrc"
      
  - name: Instalar a versão LTS do Node.js e configurá-la como padrão
    shell: |
      export NVM_DIR="$HOME/.nvm"
      [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
      nvm install --lts
      nvm alias default lts/*
    args:
      creates: "{{ ansible_env.HOME }}/.nvm/versions/node"

  - name: Add script to automatically switch node versions
    blockinfile:
      path: ~/.zshrc
      block: |
        # place this after nvm initialization!
        autoload -U add-zsh-hook
        load-nvmrc() {
          local node_version="$(nvm version)"
          local nvmrc_path="$(nvm_find_nvmrc)"
        
          if [ -n "$nvmrc_path" ]; then
            local nvmrc_node_version=$(nvm version "$(cat "${nvmrc_path}")")
        
            if [ "$nvmrc_node_version" = "N/A" ]; then
              nvm install
            elif [ "$nvmrc_node_version" != "$node_version" ]; then
              nvm use
            fi
          elif [ "$node_version" != "$(nvm version default)" ]; then
            echo "Reverting to nvm default version"
            nvm use default
          fi
        }
        add-zsh-hook chpwd load-nvmrc
        load-nvmrc